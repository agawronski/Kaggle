install.packages(AppliedPredictiveModeling)
install.packages(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
trainIndex = createDataPartition(diagnosis, p = 0.50)
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
class(predictors)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50)
training = adData[trainIndex,]
adData = data.frame(diagnosis,predictors)
testIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
testIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
training = adData[-testIndex,]
testing = adData[testIndex,]
install.packages("gcmr")
eventsData = "C:/Users/aidan/Desktop/ICX/data/1430290802events.dat"
set.seed(1111)
setwd("C:/Users/aidan/Desktop/Kaggle/pizza")
library(jsonlite)
library(caret)
library(tm)
testing <- fromJSON("test.json")
training <-fromJSON("train.json")
View(testing)
"request_text_edit_aware",
"request_title",
"requester_account_age_in_days_at_request",
"requester_days_since_first_post_on_raop_at_request",
"requester_number_of_comments_at_request",
"requester_number_of_comments_in_raop_at_request",
"requester_number_of_posts_at_request",
"requester_number_of_posts_on_raop_at_request",
"requester_number_of_subreddits_at_request",
