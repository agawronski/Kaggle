#install.packages("rworldmap")
library(knitr)
library(lubridate)
opts_chunk$set(fig.align="center")
log <- read.table(eventsData, sep="\t", quote="\"", col.names=c("date_time", "ip", "events"))
#remove developer ip's
dev_ip <- c("99.235.242.217", "76.64.209.145", "206.248.190.144", "208.103.243.242")
log <- log[!log$ip %in% dev_ip,]
log$date_time <- ymd_hms(log$date_time)
log$day <- day(log$date_time)
unique_days <- unique(day(log$date_time))
unique_ip <- unique(log$ip)
#month of analysis...currently assumes data is contained within one month
month <- month(log$date_time[1], label=TRUE, abbr=FALSE)
#first day of data
fday_name <- wday(log$date_time[1], label=TRUE, abbr=FALSE)
fday_num <-day(log$date_time[1])
#last day of data
lday_name <- wday(tail(log$date_time,n=1), label=TRUE, abbr=FALSE)
lday_num <-day(tail(log$date_time,n=1))
```
For the month of **`r month`** spanning **`r fday_name` `r fday_num`** to **`r lday_name` `r lday_num`**
```{r visitors, echo=FALSE}
hits <- NULL
for (d in unique_days) {
hits <- c(hits, length(unique(log$ip[log$day==d])))
}
plot(hits, ylab="visitors", xlab="day of the month", type="h", main="unique visitors each day", col="orange", xaxt="n", lwd=3)
axis(1, 1:length(unique_days), unique_days)
```
####Approximate User location data
```{r map, results="asis", echo=FALSE}
suppressMessages(library(RDSTK))
#if the number of unique ip's is greater than 267 they will be rejected
#so we must loop through each hundred
if (length(unique_ip) < 100) {
ips <- paste(unique_ip, collapse=", ")
out <- ip2coordinates(ips)
} else {
ips <- paste(unique_ip[1:100], collapse=", ")
out <- ip2coordinates(ips)
last <- 100
s <- c(seq(200, length(unique_ip), 100), length(unique_ip))
for (i in s) {
ips <- paste(unique_ip[(last+1):i], collapse=", ")
out <- rbind(out, ip2coordinates(ips))
last <- i
}
}
?seq
seq(200, length(unique_ip), 100)
length(unique_ip)
?try
seq(200, length(unique_ip), 100)
eventsData = "C:/Users/aidan/Desktop/ICX/data/1424937601events.dat"
apiData = "C:/Users/aidan/Desktop/ICX/data/1424937601api.dat"
baseDir = "C:/Users/aidan/Desktop/ICX/code/output/"
subDir = format(Sys.time(), "%Y-%m-%d_%H-%M-%S")
tempWd = paste(baseDir,subDir, sep="")
dir.create(tempWd)
#file.copy("C:/Users/aidan/Desktop/ICX/code/dashboard.Rmd", paste(tempWd,"dashboard.Rmd", sep=""))
#install.packages("knitr")
#install.packages("lubridate")
#install.packages("RDSTK")
#install.packages("rworldmap")
library(knitr)
library(lubridate)
opts_chunk$set(fig.align="center")
log <- read.table(eventsData, sep="\t", quote="\"", col.names=c("date_time", "ip", "events"))
#remove developer ip's
dev_ip <- c("99.235.242.217", "76.64.209.145", "206.248.190.144", "208.103.243.242")
log <- log[!log$ip %in% dev_ip,]
log$date_time <- ymd_hms(log$date_time)
log$day <- day(log$date_time)
unique_days <- unique(day(log$date_time))
unique_ip <- unique(log$ip)
#month of analysis...currently assumes data is contained within one month
month <- month(log$date_time[1], label=TRUE, abbr=FALSE)
#first day of data
fday_name <- wday(log$date_time[1], label=TRUE, abbr=FALSE)
fday_num <-day(log$date_time[1])
#last day of data
lday_name <- wday(tail(log$date_time,n=1), label=TRUE, abbr=FALSE)
lday_num <-day(tail(log$date_time,n=1))
```
For the month of **`r month`** spanning **`r fday_name` `r fday_num`** to **`r lday_name` `r lday_num`**
```{r visitors, echo=FALSE}
hits <- NULL
for (d in unique_days) {
hits <- c(hits, length(unique(log$ip[log$day==d])))
}
plot(hits, ylab="visitors", xlab="day of the month", type="h", main="unique visitors each day", col="orange", xaxt="n", lwd=3)
axis(1, 1:length(unique_days), unique_days)
```
####Approximate User location data
```{r map, results="asis", echo=FALSE}
suppressMessages(library(RDSTK))
#if the number of unique ip's is greater than 267 they will be rejected
#so we must loop through each hundred
if (length(unique_ip) < 100) {
ips <- paste(unique_ip, collapse=", ")
out <- ip2coordinates(ips)
} else {
ips <- paste(unique_ip[1:100], collapse=", ")
out <- ip2coordinates(ips)
last <- 100
s <- c(seq(200, length(unique_ip), 100), length(unique_ip))
for (i in s) {
ips <- paste(unique_ip[(last+1):i], collapse=", ")
out <- rbind(out, ip2coordinates(ips))
last <- i
}
}
seq(200, length(unique_ip), 100)
unique_ip <- 435
seq(200, length(unique_ip), 100)
?seq
I.CX dash
========
```{r 1, echo=FALSE}
eventsData = "C:/Users/aidan/Desktop/ICX/data/1424851201events.dat""
apiData = "C:/Users/aidan/Desktop/ICX/data/1424851201api.dat"
baseDir = "C:/Users/aidan/Desktop/ICX/code/output/"
subDir = format(Sys.time(), "%Y-%m-%d_%H-%M-%S")
I.CX dash
========
```{r 1, echo=FALSE}
eventsData = "C:/Users/aidan/Desktop/ICX/data/1424851201events.dat"
apiData = "C:/Users/aidan/Desktop/ICX/data/1424851201api.dat"
baseDir = "C:/Users/aidan/Desktop/ICX/code/output/"
subDir = format(Sys.time(), "%Y-%m-%d_%H-%M-%S")
tempWd = paste(baseDir,subDir, sep="")
dir.create(tempWd)
#file.copy("C:/Users/aidan/Desktop/ICX/code/dashboard.Rmd", paste(tempWd,"dashboard.Rmd", sep=""))
#install.packages("knitr")
#install.packages("lubridate")
#install.packages("RDSTK")
#install.packages("rworldmap")
library(knitr)
library(lubridate)
opts_chunk$set(fig.align="center")
log <- read.table(eventsData, sep="\t", quote="\"", col.names=c("date_time", "ip", "events"))
#remove developer ip's
dev_ip <- c("99.235.242.217", "76.64.209.145", "206.248.190.144", "208.103.243.242")
log <- log[!log$ip %in% dev_ip,]
log$date_time <- ymd_hms(log$date_time)
log$day <- day(log$date_time)
unique_days <- unique(day(log$date_time))
unique_ip <- unique(log$ip)
#month of analysis...currently assumes data is contained within one month
month <- month(log$date_time[1], label=TRUE, abbr=FALSE)
#first day of data
fday_name <- wday(log$date_time[1], label=TRUE, abbr=FALSE)
fday_num <-day(log$date_time[1])
#last day of data
lday_name <- wday(tail(log$date_time,n=1), label=TRUE, abbr=FALSE)
lday_num <-day(tail(log$date_time,n=1))
```
For the month of **`r month`** spanning **`r fday_name` `r fday_num`** to **`r lday_name` `r lday_num`**
```{r visitors, echo=FALSE}
hits <- NULL
for (d in unique_days) {
hits <- c(hits, length(unique(log$ip[log$day==d])))
}
plot(hits, ylab="visitors", xlab="day of the month", type="h", main="unique visitors each day", col="orange", xaxt="n", lwd=3)
axis(1, 1:length(unique_days), unique_days)
```
####Approximate User location data
```{r map, results="asis", echo=FALSE}
suppressMessages(library(RDSTK))
#if the number of unique ip's is greater than 267 they will be rejected
#so we must loop through each hundred
if (length(unique_ip) < 100) {
ips <- paste(unique_ip, collapse=", ")
out <- ip2coordinates(ips)
} else {
ips <- paste(unique_ip[1:100], collapse=", ")
out <- ip2coordinates(ips)
last <- 100
s <- c(seq(200, length(unique_ip), 100), length(unique_ip))
for (i in s) {
ips <- paste(unique_ip[(last+1):i], collapse=", ")
out <- rbind(out, ip2coordinates(ips))
last <- i
}
}
length(unique_ip)
I.CX dash
========
```{r 1, echo=FALSE}
eventsData = "C:/Users/aidan/Desktop/ICX/data/1424246401events.dat"
apiData = "C:/Users/aidan/Desktop/ICX/data/1424246401api.dat"
baseDir = "C:/Users/aidan/Desktop/ICX/code/output/"
subDir = format(Sys.time(), "%Y-%m-%d_%H-%M-%S")
tempWd = paste(baseDir,subDir, sep="")
dir.create(tempWd)
#file.copy("C:/Users/aidan/Desktop/ICX/code/dashboard.Rmd", paste(tempWd,"dashboard.Rmd", sep=""))
#install.packages("knitr")
#install.packages("lubridate")
#install.packages("RDSTK")
#install.packages("rworldmap")
library(knitr)
library(lubridate)
opts_chunk$set(fig.align="center")
log <- read.table(eventsData, sep="\t", quote="\"", col.names=c("date_time", "ip", "events"))
#remove developer ip's
dev_ip <- c("99.235.242.217", "76.64.209.145", "206.248.190.144", "208.103.243.242")
log <- log[!log$ip %in% dev_ip,]
log$date_time <- ymd_hms(log$date_time)
log$day <- day(log$date_time)
unique_days <- unique(day(log$date_time))
unique_ip <- unique(log$ip)
#month of analysis...currently assumes data is contained within one month
month <- month(log$date_time[1], label=TRUE, abbr=FALSE)
#first day of data
fday_name <- wday(log$date_time[1], label=TRUE, abbr=FALSE)
fday_num <-day(log$date_time[1])
#last day of data
lday_name <- wday(tail(log$date_time,n=1), label=TRUE, abbr=FALSE)
lday_num <-day(tail(log$date_time,n=1))
```
For the month of **`r month`** spanning **`r fday_name` `r fday_num`** to **`r lday_name` `r lday_num`**
```{r visitors, echo=FALSE}
hits <- NULL
for (d in unique_days) {
hits <- c(hits, length(unique(log$ip[log$day==d])))
}
plot(hits, ylab="visitors", xlab="day of the month", type="h", main="unique visitors each day", col="orange", xaxt="n", lwd=3)
axis(1, 1:length(unique_days), unique_days)
```
####Approximate User location data
```{r map, results="asis", echo=FALSE}
suppressMessages(library(RDSTK))
#if the number of unique ip's is greater than 267 they will be rejected
#so we must loop through each hundred
if (length(unique_ip) < 100) {
ips <- paste(unique_ip, collapse=", ")
out <- ip2coordinates(ips)
} else {
ips <- paste(unique_ip[1:100], collapse=", ")
out <- ip2coordinates(ips)
last <- 100
s <- c(seq(200, length(unique_ip), 100), length(unique_ip))
for (i in s) {
ips <- paste(unique_ip[(last+1):i], collapse=", ")
out <- rbind(out, ip2coordinates(ips))
last <- i
}
}
length(unique_ip)
seq(200, length(unique_ip), 100)
length(unique_ip) <- 357
seq(200, length(unique_ip), 100)
length(unique_ip) <- 150
seq(200, length(unique_ip), 100)
length(unique_ip) <- 252
last <- 100
s <- c(seq(200, length(unique_ip), 100), length(unique_ip))
s
length(unique_ip) <- 200
seq(200, length(unique_ip), 100)
I.CX dash
========
```{r 1, echo=FALSE}
eventsData = "C:/Users/aidan/Desktop/ICX/data/1426402801events.dat"
apiData = "C:/Users/aidan/Desktop/ICX/data/1426402801api.dat"
baseDir = "C:/Users/aidan/Desktop/ICX/code/output/"
subDir = format(Sys.time(), "%Y-%m-%d_%H-%M-%S")
tempWd = paste(baseDir,subDir, sep="")
dir.create(tempWd)
#file.copy("C:/Users/aidan/Desktop/ICX/code/dashboard.Rmd", paste(tempWd,"dashboard.Rmd", sep=""))
#install.packages("knitr")
#install.packages("lubridate")
#install.packages("RDSTK")
#install.packages("rworldmap")
library(knitr)
library(lubridate)
opts_chunk$set(fig.align="center")
log <- read.table(eventsData, sep="\t", quote="\"", col.names=c("date_time", "ip", "events"))
#remove developer ip's
dev_ip <- c("99.235.242.217", "76.64.209.145", "206.248.190.144", "208.103.243.242", "50.101.17.38")
log <- log[!log$ip %in% dev_ip,]
log$date_time <- ymd_hms(log$date_time)
log$day <- day(log$date_time)
unique_days <- unique(day(log$date_time))
I.CX dash
========
```{r 1, echo=FALSE}
eventsData = "C:/Users/aidan/Desktop/ICX/data/1426402801events.dat"
apiData = "C:/Users/aidan/Desktop/ICX/data/1426402801api.dat"
baseDir = "C:/Users/aidan/Desktop/ICX/code/output/"
subDir = format(Sys.time(), "%Y-%m-%d_%H-%M-%S")
tempWd = paste(baseDir,subDir, sep="")
dir.create(tempWd)
#file.copy("C:/Users/aidan/Desktop/ICX/code/dashboard.Rmd", paste(tempWd,"dashboard.Rmd", sep=""))
#install.packages("knitr")
#install.packages("lubridate")
#install.packages("RDSTK")
#install.packages("rworldmap")
library(knitr)
library(lubridate)
opts_chunk$set(fig.align="center")
log <- read.table(eventsData, sep="\t", quote="\"", col.names=c("date_time", "ip", "events"))
I.CX dash
========
```{r 1, echo=FALSE}
eventsData = "C:/Users/aidan/Desktop/ICX/data/1426402801events.dat"
apiData = "C:/Users/aidan/Desktop/ICX/data/1426402801api.dat"
baseDir = "C:/Users/aidan/Desktop/ICX/code/output/"
subDir = format(Sys.time(), "%Y-%m-%d_%H-%M-%S")
tempWd = paste(baseDir,subDir, sep="")
dir.create(tempWd)
#file.copy("C:/Users/aidan/Desktop/ICX/code/dashboard.Rmd", paste(tempWd,"dashboard.Rmd", sep=""))
#install.packages("knitr")
#install.packages("lubridate")
#install.packages("RDSTK")
#install.packages("rworldmap")
library(knitr)
library(lubridate)
opts_chunk$set(fig.align="center")
log <- read.table(eventsData, sep="\t", quote="\"", col.names=c("date_time", "ip", "events"))
#remove developer ip's
dev_ip <- c("99.235.242.217", "76.64.209.145", "206.248.190.144", "208.103.243.242", "50.101.17.38")
log <- log[!log$ip %in% dev_ip,]
log$date_time <- ymd_hms(log$date_time)
log$day <- day(log$date_time)
unique_days <- unique(day(log$date_time))
unique_ip <- unique(log$ip)
#month of analysis...currently assumes data is contained within one month
month <- month(log$date_time[1], label=TRUE, abbr=FALSE)
#first day of data
fday_name <- wday(log$date_time[1], label=TRUE, abbr=FALSE)
fday_num <-day(log$date_time[1])
#last day of data
lday_name <- wday(tail(log$date_time,n=1), label=TRUE, abbr=FALSE)
lday_num <-day(tail(log$date_time,n=1))
```
For the month of **`r month`** spanning **`r fday_name` `r fday_num`** to **`r lday_name` `r lday_num`**
```{r visitors, echo=FALSE}
hits <- NULL
for (d in unique_days) {
hits <- c(hits, length(unique(log$ip[log$day==d])))
}
plot(hits, ylab="visitors", xlab="day of the month", type="h", main="unique visitors each day", col="orange", xaxt="n", lwd=3)
axis(1, 1:length(unique_days), unique_days)
```
####Approximate User location data
```{r map, results="asis", echo=FALSE}
suppressMessages(library(RDSTK))
#if the number of unique ip's is greater than 267 they will be rejected
#so we must loop through each hundred
if (length(unique_ip) < 200) {
ips <- paste(unique_ip, collapse=", ")
out <- ip2coordinates(ips)
} else {
ips <- paste(unique_ip[1:100], collapse=", ")
out <- ip2coordinates(ips)
last <- 100
s <- c(seq(200, length(unique_ip), 100), length(unique_ip))
for (i in s) {
ips <- paste(unique_ip[(last+1):i], collapse=", ")
out <- rbind(out, ip2coordinates(ips))
last <- i
}
}
I.CX dash
========
```{r 1, echo=FALSE}
eventsData = "C:/Users/aidan/Desktop/ICX/data/1427007601events.dat"
apiData = "C:/Users/aidan/Desktop/ICX/data/1427007601api.dat"
baseDir = "C:/Users/aidan/Desktop/ICX/code/output/"
subDir = format(Sys.time(), "%Y-%m-%d_%H-%M-%S")
tempWd = paste(baseDir,subDir, sep="")
dir.create(tempWd)
#file.copy("C:/Users/aidan/Desktop/ICX/code/dashboard.Rmd", paste(tempWd,"dashboard.Rmd", sep=""))
#install.packages("knitr")
#install.packages("lubridate")
#install.packages("RDSTK")
#install.packages("rworldmap")
library(knitr)
library(lubridate)
log <- read.table(eventsData, sep="\t", quote="\"", col.names=c("date_time", "ip", "events"))
opts_chunk$set(fig.align="center")
#remove developer ip's
dev_ip <- c("99.235.242.217", "76.64.209.145", "206.248.190.144", "208.103.243.242", "50.101.17.38")
log <- log[!log$ip %in% dev_ip,]
log$date_time <- ymd_hms(log$date_time)
log$day <- day(log$date_time)
unique_days <- unique(day(log$date_time))
unique_ip <- unique(log$ip)
#month of analysis...currently assumes data is contained within one month
month <- month(log$date_time[1], label=TRUE, abbr=FALSE)
#first day of data
fday_name <- wday(log$date_time[1], label=TRUE, abbr=FALSE)
fday_num <-day(log$date_time[1])
#last day of data
lday_name <- wday(tail(log$date_time,n=1), label=TRUE, abbr=FALSE)
lday_num <-day(tail(log$date_time,n=1))
```
For the month of **`r month`** spanning **`r fday_name` `r fday_num`** to **`r lday_name` `r lday_num`**
```{r visitors, echo=FALSE}
hits <- NULL
for (d in unique_days) {
hits <- c(hits, length(unique(log$ip[log$day==d])))
}
plot(hits, ylab="visitors", xlab="day of the month", type="h", main="unique visitors each day", col="orange", xaxt="n", lwd=3)
axis(1, 1:length(unique_days), unique_days)
```
####Approximate User location data
```{r map, results="asis", echo=FALSE}
suppressMessages(library(RDSTK))
#if the number of unique ip's is greater than 267 they will be rejected
#so we must loop through each hundred
if (length(unique_ip) < 200) {
ips <- paste(unique_ip, collapse=", ")
out <- ip2coordinates(ips)
} else {
ips <- paste(unique_ip[1:100], collapse=", ")
out <- ip2coordinates(ips)
last <- 100
s <- c(seq(200, length(unique_ip), 100), length(unique_ip))
for (i in s) {
ips <- paste(unique_ip[(last+1):i], collapse=", ")
out <- rbind(out, ip2coordinates(ips))
last <- i
}
}
log$events <- gsub("[{}]", "", log$events)  #remove curly brackets
out
View(out)
View(out)
?try
library(RDSTK)
ip2coordinates("152.26.19.15")
library(caret)
getwe()
getwd()
setwd("C:/Users/aidan/Desktop/Kaggle/restaurant")
set.seed(1111)
data <- read.csv("train.csv")
View(data)
names(data)
modelFit <- train(revenue ~ ., data=data, method="glm")
warnings()
modelFit
?train
names(getMOdelInfo)
names(getMOdelInfo())
names(getModelInfo())
modelFit <- train(revenue ~ ., data=data, method="lm")
modelFit <- train(revenue ~ ., data=data, method="glm")
modelFit2 <- train(revenue ~ ., data=data, method="lm")
modelFit2
modelFit
predicitons <- predict(modelFit, newdata=data)
modelFit$finalModel
predictions
predicitons <- predict(modelFit, newdata=data)
predictions
predicitons <- predict(modelFit, newdata=data)
predicitons
confusionMatrix(predictions)
predictions <- predict(modelFit, newdata=data)
predictions
confusionMatrix(predictions)
predictions
confusionMatrix(predictions)
?confusionMatrix
confusionMatrix(predictions, data$revenue)
head(predictions)
head(data$revenue)
predictions==data$revenue
predictions[14]
data$revenue[14]
data$revenue[13]
data$revenue[13]
predictions[13]
class(predictions)
class(data$revenue)
modelFit2 <- train(revenue ~ ., data=data, method="lm")
modelFit2
head(modelFit2)
modelFit2
modelFit2$finalModel
library(lubridate)
test <- read.csv("train.csv")
train <- read.csv("train.csv")
names(train)
library(caret)
library(lubridate)
setwd("C:/Users/aidan/Desktop/Kaggle/restaurant")
set.seed(1111)
train <- read.csv("train.csv")
View(train)
head(train)
train[,c("Open.Date")] <- mdy(train[,c("Open.Date")])
modelFit <- train(revenue ~ ., data=train, method="glm")
modelFit
modelFit2 <- train(revenue ~ ., data=train, method="lm")
summary(train)
class(train)
class(names(train))
class(train$City)
modelFit <- train(revenue ~ ., data=train, method="glm")
modelFit
modelFit2 <- train(revenue ~ ., data=train, method="lm")
modelFit2
featurePlot(x=train[,-c("revenue")], y=train$revenue)
name(train)
names(train)
featurePlot(x=train[,-43], y=train$revenue)
featurePlot(x=train[,-43], y=train$revenue, plot="pairs")
